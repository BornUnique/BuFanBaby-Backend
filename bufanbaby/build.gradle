buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
        springSecurityOAuth2Version = '2.0.7.RELEASE'
        jerseyVersion = '2.14'
        //jedisRedisClientsVersion = '2.7.2'
        uadetectorResourceVersion = '2014.04'
        commonsLangVersion = '3.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:1.2.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'


war {
    baseName = 'bufanbaby'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

applicationDefaultJvmArgs = [
    "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8888"
]

repositories {
    mavenCentral()
}

configurations {
    compile.exclude group: 'commons-logging'
    //compile.exclude group: 'commons-codec'
    //compile.exclude group: 'commons-pool2'
    compile.exclude group:'org.codehaus.jackson'
    
    //compile.exclude group:'redis.clients', version:'2.5.2'
    
    //compile.exclude group:'org.codehaus.jackson' name: '' version:''
    // exclude tomcat jdbc and juli logging
    
    providedRuntime
}

dependencies {
    //compile("org.springframework.boot:spring-boot-starter-actuator")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa")
    //compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    //compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-jersey")
    compile("org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}")
    compile("org.springframework.boot:spring-boot-starter-redis")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.security.oauth:spring-security-oauth2:${springSecurityOAuth2Version}")
    //compile("redis.clients:jedis:${jedisRedisClientsVersion}")
    compile("net.sf.uadetector:uadetector-resources:${uadetectorResourceVersion}")
    compile("org.apache.commons:commons-lang3:${commonsLangVersion}")
    compile("com.google.guava:guava:18.0")
    //compile("org.springframework.boot:spring-boot-starter-velocity")
    compile("org.springframework.boot:spring-boot-starter-web")
    //runtime("org.apache.derby:derby")
    //runtime("com.h2database:h2")
    //runtime("org.hsqldb:hsqldb")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
